From 6c0e8b7468a6717659c5ce9902e48ef866b59d5b Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Sat, 12 Jun 2021 21:43:00 +0300
Subject: [PATCH] Clean up shmget flags and alignment checking

---
 src/hotspot/os/linux/os_linux.cpp | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/src/hotspot/os/linux/os_linux.cpp b/src/hotspot/os/linux/os_linux.cpp
index be745293c4c..b35b82166c4 100644
--- a/src/hotspot/os/linux/os_linux.cpp
+++ b/src/hotspot/os/linux/os_linux.cpp
@@ -3897,16 +3897,9 @@ char* os::Linux::reserve_memory_special_shm(size_t bytes, size_t alignment,
   // Create a large shared memory region to attach to based on size.
   // Currently, size is the total size of the heap.
   int flags = SHM_HUGETLB|IPC_CREAT|SHM_R|SHM_W;
-  #define _1G_ALIGN 1073741824
-  if (is_aligned(bytes, _1G_ALIGN)) {
-    #define _MAP_HUGE_MASK 0x3f
-    #define _MAP_HUGE_SHIFT 26
-    int shift = 30;
-    flags |= (shift & _MAP_HUGE_MASK) << _MAP_HUGE_SHIFT;
-    #undef _MAP_HUGE_MASK
-    #undef _MAP_HUGE_SHIFT
-  }
-  #undef _1G_ALIGN
+  if (os::large_page_size() != default_large_page_size()) {
+    flags |= (exact_log2(os::large_page_size()) << MAP_HUGE_SHIFT);
+  }
   int shmid = shmget(IPC_PRIVATE, bytes, flags);
   if (shmid == -1) {
     // Possible reasons for shmget failure:
-- 
2.31.1

